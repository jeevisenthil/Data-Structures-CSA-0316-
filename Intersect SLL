#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};
void display(struct node *head) {
    struct node *t = head;
    while (t != NULL) {
        printf("%d ", t->data);
        t = t->next;
    }
    printf("\n");
}
void insertEnd(struct node **head, int num) {
    struct node *n = (struct node *)malloc(sizeof(struct node));
    n->data = num;
    n->next = NULL;
    if (*head == NULL) {
        *head = n;
    } else {
        struct node *temp = *head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = n;
    }
}
struct node *intersect(struct node *head1, struct node *head2) {
    struct node *result = NULL;
    struct node *tail = NULL;
    while (head1 != NULL && head2 != NULL) {
        if (head1->data == head2->data) {
            insertEnd(&result, head1->data);
            if (tail == NULL) {
                tail = result;
            } else {
                while (tail->next != NULL) {
                    tail = tail->next;
                }
            }
            head1 = head1->next;
            head2 = head2->next;
        } else if (head1->data < head2->data) {
            head1 = head1->next;
        } else {
            head2 = head2->next;
        }
    }
    return result;
}
int main() {
	printf("Name: Jeevitha\nReg No:192324020\n");
    struct node *l1 = NULL;
    struct node *l2 = NULL;
    insertEnd(&l1, 1);
    insertEnd(&l1, 2);
    insertEnd(&l1, 3);
    insertEnd(&l1, 4);
    insertEnd(&l1, 5);
    insertEnd(&l2, 2);
    insertEnd(&l2, 5);
    insertEnd(&l2, 1);
    insertEnd(&l2, 6);
    printf("List 1: ");
    display(l1);
    printf("List 2: ");
    display(l2);
    struct node *intersection = intersect(l1, l2);
    printf("Intersection: ");
    display(intersection);
    while (l1 != NULL) {
        struct node *temp = l1;
        l1 = l1->next;
        free(temp);
    }
    while (l2 != NULL) {
        struct node *temp = l2;
        l2 = l2->next;
        free(temp);
    }
    while (intersection != NULL) {
        struct node *temp = intersection;
        intersection = intersection->next;
        free(temp);
    }
    return 0;
}
